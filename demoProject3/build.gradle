// Gradle 빌드 도구를 이용하는 프로젝트를 관리할 때 사용하는 파일
// dependencies 에 필요한 라이브러리, 모듈을 작성하면 mvn repository 에서 자동으로 다운로드 진행됨
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'edu.home'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// 빌드 도구로 gradle 사용
// 프로그램을 관리할 때 사용하는 파일 build.gradle
// 프로젝트 만들 때 dependencies 에서 설정한 것들이 다 들어와있음(추가돼있음)
// 선택하고 만들어서 다 들어와져 있는 거 dependencies 추가할 때 아무것도 추가 안하면 없음
// 라이브러리나 모듈 사용할 거 추가할 때 여기에서 추가해주면 됨
// 프로젝트 만들다가 필요한 모듈이나 라이브러리가 있으면 여기에서 추가
// 추가하는 코드 가져오는 곳 MVN Maven repository 에서 필요한 거 검색해서 사용
// Gradle 에 있는 거 복사해서 가져와서 복사 붙여넣기 한 다음에 저장하고
// 프로젝트 오른쪽 마우스로 클릭하고 gradle 에서 refresh gradle project 눌러야함
// Progress 돌아가면 모듈 사용할 수 있음
// -> 하고 나면 Project and External Dependencies 안에 파일 추가됨 그럼 프로젝트 내에서 사용할 수 있음
// 더 이상 라이브러리나 모듈 사용 안할 때 여기서 지워주고 refresh 해줘야 Project and External Dependencies 여기에서 삭제됨
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
// 외부 연결된 사이트 mvn 에서 위에 작성된 모듈이나 라이브러리를 다운로드 받아서 프로젝트에 자동으로 추가
// 해당 파일 변경 후에 프로젝트 우클릭해서 -> Gradle -> Refresh Gradle Project 클릭

tasks.named('test') {
	useJUnitPlatform()
}
