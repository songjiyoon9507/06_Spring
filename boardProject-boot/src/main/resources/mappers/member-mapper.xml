<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.project.member.model.mapper.MemberMapper">
<!-- <mapper namespace="Mapper 인터페이스 경로 작성(필수)"> -->
	<!-- Mapper 인터페이스 경로 작성(필수) 패키지명.인터페이스명 -->
	<!-- 해당 태그는 무조건 삭제해야함 -->
	<!-- <cache-ref namespace=""/> -->
	
	<!-- <select> 태그 속성
	
		- id 속성 : 태그를 식별하는 값
		(연결된 Mapper 의 메서드명과 동일하게 작성해서 연결)
		
		- resultType : 조회 결과 한 줄(1행)을 저장하여
		               반환할 변수/객체 자료형 지정
		               
		               조회 결과가 여러 행이면
		               행 별로 변수/객체 자료형으로 저장 후
		               모아서 List 로 반환
	 -->
	 
	 <!--  parameterType="string" 생략 가능
	 parameterType 속성은 필수 속성 아님
	 => TypeHandler 를 이용해서 자료형을 판별할 수 있음 -->

	<!-- 로그인 -->
	<select id="login" resultType="Member">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME, MEMBER_PW,
		MEMBER_TEL, MEMBER_ADDRESS, PROFILE_IMG, AUTHORITY,
		TO_CHAR(ENROLL_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') ENROLL_DATE
		FROM "MEMBER"
		WHERE MEMBER_EMAIL = #{memberEmail}
		AND MEMBER_DEL_FL = 'N'
	</select>

	<!-- 이메일 중복 검사 -->
	<select id="checkEmail" resultType="_int">
		SELECT COUNT(*)
		FROM "MEMBER"
		WHERE MEMBER_DEL_FL = 'N'
		AND MEMBER_EMAIL = #{memberEmail}
	</select>
	
	<!-- 닉네임 중복 검사 -->
	<select id="checkNickname" resultType="_int">
		SELECT COUNT(*)
		FROM "MEMBER"
		WHERE MEMBER_DEL_FL = 'N'
		AND MEMBER_NICKNAME = #{memberNickname}
	</select>
	
	<insert id="signup">
		INSERT INTO "MEMBER"
		VALUES(SEQ_MEMBER_NO.NEXTVAL, 
			#{memberEmail},
			#{memberPw},
			#{memberNickname},
			#{memberTel},
			#{memberAddress},
			NULL,
			DEFAULT,
			DEFAULT,
			DEFAULT
		)
	</insert>
	
	<select id="testLogin" resultType="Member">
	    SELECT * FROM MEMBER
	    WHERE MEMBER_EMAIL = #{memberEmail}
	</select>
	
	<select id="memberList">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME, MEMBER_PW,
		MEMBER_TEL, MEMBER_ADDRESS, PROFILE_IMG, AUTHORITY,
		TO_CHAR(ENROLL_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') ENROLL_DATE
		FROM "MEMBER"
		WHERE MEMBER_DEL_FL = 'N'
		ORDER BY MEMBER_NO
	</select>
	
	<select id="selectAll" resultType="Member">
		SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME, MEMBER_DEL_FL
		FROM "MEMBER"
		ORDER BY MEMBER_NO
	</select>
	
	<update id="resetPw" parameterType="Member">
		UPDATE "MEMBER" SET
		MEMBER_PW = #{memberPw}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<update id="restorationMemberNo">
		UPDATE "MEMBER" SET
		MEMBER_DEL_FL = 'N'
		WHERE MEMBER_NO = #{memberNo}
	</update>
</mapper>
