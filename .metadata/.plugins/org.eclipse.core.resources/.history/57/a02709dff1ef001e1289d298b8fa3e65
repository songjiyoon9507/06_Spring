package edu.kh.demo.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import jakarta.servlet.http.HttpServletRequest;

// Bean : 스프링이 만들고 관리하는 객체
@Controller // 요청/응답 제어 역할 명시 + Bean 등록
@RequestMapping("param") // /param 으로 시작하는 모든 요청을 현재 컨트롤러로 매핑
public class ParameterController {

	// @RequestMapping("main")
	@GetMapping("main") // /param/main GET 방식 요청 매핑
	public String paramMain() {
		
		// classpath: src/main/resources
		// 접두사 : classpath:/templates
		// 접미사 : .html
		return "param/param-main";
		// -> src/main/resources/templates/param/param-main.html
	}
	
	/* 1. HttpServletRequest.getParameter("key") 이용
	 * 매개 변수 자리에 넣어줌 HttpServletRequest req
	 * -> 이렇게 넣으면 사용할 수 있음
	 * 
	 * HttpServletRequest : 
	 * - 요청 클라이언트 정보, 제출된 파라미터 등을 저장한 객체
	 * - 클라이언트 요청 시 생성
	 * 
	 * 전달 인자 해결사
	 * ArgumentResolver(전달 인자 해결사) (Spring 내장 객체)
	 * 생성해서 주입시켜줌(Spring 이)
	 * - Spring 의 Controller 메서드 작성 시
	 * 매개변수에 원하는 객체를 작성하면
	 * 존재하는 객체를 바인딩 또는 없으면 생성해서 바인딩
	 * */
	
	@PostMapping("test1") // /param/test1 POST 방식 요청 매핑
	public String paramTest1(HttpServletRequest req) {
		// html 에서 넘겨준 값 받기
		String inputName = req.getParameter("inputName");
		int inputAge = Integer.parseInt(req.getParameter("inputAge"));
		// int 형으로 형 변환
		String inputAddress = req.getParameter("inputAddress");
		
//		System.out.println(inputName);
		// 얻어온 값 이렇게 확인했었는데
		
		// forward 경로 써주는 거
		
		/* Spring 에서 Redirect(재요청) 하는 방법
		 * 
		 * - Controller 메서드 반환 값에
		 * "redirect:요청주소"; 작성
		 * */
		return "redirect:/param/main";
	}
}
